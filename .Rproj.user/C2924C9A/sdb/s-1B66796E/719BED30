{
    "collab_server" : "",
    "contents" : "library(insol)\ndata_a <- read.csv(\"~/Dropbox/Spring/Maya.csv\", as.is=TRUE)\ndata_b <- read.csv(\"~/Dropbox/Spring/Lily Data.csv\", as.is=TRUE)\n\ndim(data_a)\ndim(data_b)\n\nnames(data_a)\nnames(data_b)\nspring_data <- rbind(data_a,data_b)\ndim(spring_data)\nfor(i in 1:31){\nspring_data[which(spring_data[,i] == \"N/A\"),i] <- NA\n}\n\nsave(spring_data,  file=\"~/Dropbox/Spring/Global_bird_breeding_dates.Rdata\")\nload('~/Dropbox/Spring/Global_bird_breeding_dates.Rdata')\n\nhead(spring_data)\ndim(spring_data)\nnames(spring_data)\n####################\n\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,7])))\ni <- 244\nfor(i in 1:length(spring_data[,7])){\na <- paste0(as.numeric(spring_data[i,7]), \"/\", as.numeric(spring_data[i,8]))\nif(is.na(spring_data[i,7]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nArrival_start_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Arrival_start_julian_date)\nspring_data[,33]\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,9])))\ni <- 244\nfor(i in 1:length(spring_data[,9])){\na <- paste0(as.numeric(spring_data[i,9]), \"/\", as.numeric(spring_data[i,10]))\nif(is.na(spring_data[i,9]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nArrival_end_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Arrival_end_julian_date)\nspring_data[,34]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,11])))\ni <- 244\nfor(i in 1:length(spring_data[, 11])){\na <- paste0(as.numeric(spring_data[i, 11]), \"/\", as.numeric(spring_data[i,12]))\nif(is.na(spring_data[i, 11]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nEgg_start_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Egg_start_julian_date)\nspring_data[,35]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,13])))\ni <- 244\nfor(i in 1:length(spring_data[, 13])){\na <- paste0(as.numeric(spring_data[i, 13]), \"/\", as.numeric(spring_data[i,14]))\nif(is.na(spring_data[i, 13]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nEgg_end_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Egg_end_julian_date)\nspring_data[,36]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,16])))\ni <- 244\nfor(i in 1:length(spring_data[, 16])){\na <- paste0(as.numeric(spring_data[i, 16]), \"/\", as.numeric(spring_data[i,17]))\nif(is.na(spring_data[i, 16]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nHatch_start_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Hatch_start_julian_date)\nspring_data[,37]\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,18])))\ni <- 244\nfor(i in 1:length(spring_data[, 18])){\na <- paste0(as.numeric(spring_data[i, 18]), \"/\", as.numeric(spring_data[i,19]))\nif(is.na(spring_data[i, 18]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nHatch_end_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Hatch_end_julian_date)\nspring_data[,38]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,20])))\ni <- 244\nfor(i in 1:length(spring_data[, 20])){\na <- paste0(as.numeric(spring_data[i, 20]), \"/\", as.numeric(spring_data[i,21]))\nif(is.na(spring_data[i, 20]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nFledge_start_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Fledge_start_julian_date)\nspring_data[,39]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,22])))\ni <- 244\nfor(i in 1:length(spring_data[, 22])){\na <- paste0(as.numeric(spring_data[i, 22]), \"/\", as.numeric(spring_data[i,23]))\nif(is.na(spring_data[i, 22]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nFledge_end_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Fledge_end_julian_date)\nspring_data[,40]\n\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,24])))\ni <- 244\nfor(i in 1:length(spring_data[, 24])){\na <- paste0(as.numeric(spring_data[i, 24]), \"/\", as.numeric(spring_data[i,25]))\nif(is.na(spring_data[i, 24]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nDeparture_start_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Departure_start_julian_date)\nspring_data[,41]\n\n###########\n\nposix_dates <- as.matrix(rep(NA, length(spring_data[,26])))\ni <- 244\nfor(i in 1:length(spring_data[, 26])){\na <- paste0(as.numeric(spring_data[i, 26]), \"/\", as.numeric(spring_data[i,27]))\nif(is.na(spring_data[i, 26]) == FALSE){posix_dates[i,\t1] <- as.character(strptime(a , format=\"%m/%d\"))}\n \n}\n\nDeparture_end_julian_date <- as.numeric(julian(strptime(posix_dates[,1], format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2017-01-01\")))\n\nspring_data <- cbind(spring_data, Departure_end_julian_date)\nspring_data[,42]\n\n\nsave(spring_data,  file=\"~/Dropbox/Spring/Global_bird_breeding_dates_julian.Rdata\")\nload('~/Dropbox/Spring/Global_bird_breeding_dates_julian.Rdata')\n#save(spring_data,  file=\"~/Dropbox/Spring/Global_bird_breeding_dates_julian_matched.Rdata\")\n#load('~/Dropbox/Spring/Global_bird_breeding_dates_julian_matched.Rdata')\n\nhead(spring_data)\ntail(spring_data)\ndim(spring_data)\nspring_data[,42]\n\nformat(Sys.time(), format=\"%H_%M_%S_%b_$_%Y\")\nlibrary(insol)\n\nfams <- spring_data[,43]\nfams[which(is.na(fams) == TRUE)] <- 21\nfamily_colors <- as.factor(fams)\nlevels(family_colors) <- c(21,1:20)\n\nlevels(family_colors) <- c(\"black\", rainbow(21))\n\nspring_data <- cbind(spring_data, family_colors)\n\n\nspring_data[,43:44]\n\nnumber <-145\nplot(1:21, col=levels(family_colors))\n\n#############################\n#############################\n\n \n#############################\n#############################\n\n\npdf(file=\"~/Dropbox/Spring/lat and daylength_by_start_and_end_date.pdf\", width=15, height=8.5)\n\njd2016 <- JD(seq(ISOdate(2016,1,1),ISOdate(2016,12,31),by= \"day\" )) \n\n\nplot(0,0,xlim=c(0,500), ylim=c(-90,90), xlab=\"Julian date\", ylab=\"Latitude\", main=\"Start and end of breeding season\")\nj <- 10\ni <- 3\nframe_seq <- seq(0,24, length.out=365)\n\n#frame_seq[nearest]\n\ncolor_ramp <- colorRampPalette(c(\"black\", \"cornflowerblue\",\"#FFFF80FF\", \"#FFFF00FF\", \"#FF8000FF\", \"firebrick\"))(365)\n\nfor(j in -90:90){\nlengths_at_day <- daylength(j,11, jd2016,1)[,3]\n\nnearest <- rep(NA, 365)\nfor(i in 1:365){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\n\n\npoints(1:365, rep(j,365), col=adjustcolor(color_ramp[nearest], alpha=.5), pch=15, cex=.6)\n}\n\nabline(h=0, col=\"black\")\n\nabline(v =julian(strptime(\"2016-03-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-09-22\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-12-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-06-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\n#legend(\"topright\", legend=c(\"arrival start\", \"arrival end\", \"lay start\", \"lay end\", \"hatch start\", \"hatch end\", \"fledge start\", \"fledge end\", \"depart start\", \"depart end\"), col=c(adjustcolor(\"red\", alpha=1), adjustcolor(\"red\", alpha=.5), adjustcolor(\"green\", alpha=1), adjustcolor(\"green\", alpha=.5), adjustcolor(\"blue\", alpha=1), adjustcolor(\"blue\", alpha=.5), adjustcolor(\"orange\", alpha=1), adjustcolor(\"orange\", alpha=.5), adjustcolor(\"black\", alpha=1), adjustcolor(\"black\", alpha=.5)), pch=\"-\", cex=1.4)\n\n\n####################\n\ncolor_return <- function(julian_date_column, shape, colors){\nlengths_at_day <- daylength(as.numeric(spring_data[,4]),as.numeric(spring_data[,5]), as.numeric(spring_data[, julian_date_column]), rep(1, length(spring_data[, julian_date_column])))[,3]\nframe_seq <- seq(0,24, length.out=365)\nnearest <- rep(NA, length(lengths_at_day))\nfor(i in 1:length(lengths_at_day)){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\npoints(spring_data[, julian_date_column], as.numeric(spring_data[,4]), pch=shape, cex=1.5, col=adjustcolor( colors[nearest], alpha=1))\n\n}\n\n\n#color_return(32, 15, spring_data[,44])\n#color_return(33, 15, spring_data[,44])\n\n#color_return(34, 17, spring_data[,44])\n#color_return(35, 15, spring_data[,44])\n\n#color_return(36, 25, spring_data[,44])\n#color_return(37, 25, spring_data[,44])\n\n#color_return(38, 11, spring_data[,44])\n#color_return(39, 11, spring_data[,44])\n\n#color_return(40, 23, spring_data[,44])\n#color_return(41, 23, spring_data[,44])\n\nadjuster <- 55\nresiduals <- 40\nup_down <- 5\nlines(declination(jd2016 + adjuster) + up_down)\nlines(declination(jd2016+ adjuster) + residuals + up_down, lty=2)\nlines(declination(jd2016+ adjuster) - residuals + up_down, lty=2)\n\nnames(spring_data)\nhead(spring_data)\n\n\nfamily <- as.factor(spring_data[,3])\nlevels(family) <- rainbow(length(levels(family)))\n\nhead(spring_data[,32:38])\nline_vectors <- spring_data[,c(5,33, 35, 37, 39, 41)]\ndim(line_vectors)\n\ncolor_vector <- colorRampPalette(c( \"#756bb1\", \"#bcbddc\", \"#efedf5\"))(4)\n\nline_length <- \tround(line_vectors[ ,5] - line_vectors[ ,3])\nline_length <- line_length + abs(min(line_length, na.rm=TRUE))\n\n\nline_color <- rainbow(max(line_length, na.rm=TRUE))\ncolors <- line_color[rank1]\nh <-300\nfor(h in 1:length(spring_data[, 1])){\nlines(x= line_vectors[h ,c(3,5)], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(\"black\", alpha=.9))\n}\n\nfor(h in 1:length(spring_data[, 1])){\npoints(x= line_vectors[h , 3], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(\"limegreen\", alpha=.7))\npoints(x= line_vectors[h , 5], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(\"firebrick\", alpha=.7))\n}\n\n\n\nlegend(\"topright\", legend= c(\"Egg start date\", \"Fledge start date\", \"breeding season\"), pch=c(19,19,NA), lty=c(NA, NA, 1), col= c(\"limegreen\", \"firebrick\", \"black\"), bg=\"white\")\n\ndev.off()\n\n#############################################\n#############################################\n\n\n\n\n\n#############################\n#############################\n\n\npdf(file=\"~/Dropbox/Spring/lat and daylength_by_family.pdf\", width=15, height=8.5)\njd2016 <- JD(seq(ISOdate(2016,1,1),ISOdate(2016,12,31),by= \"day\" )) \n\n\nplot(0,0,xlim=c(0,500), ylim=c(-90,90), xlab=\"Julian date\", ylab=\"Latitude\", main=\"Start and end of breeding season\")\nj <- 10\ni <- 3\nframe_seq <- seq(0,24, length.out=365)\n\n#frame_seq[nearest]\n\ncolor_ramp <- colorRampPalette(c(\"black\", \"cornflowerblue\",\"#FFFF80FF\", \"#FFFF00FF\", \"#FF8000FF\", \"firebrick\"))(365)\n\nfor(j in -90:90){\nlengths_at_day <- daylength(j,11, jd2016,1)[,3]\n\nnearest <- rep(NA, 365)\nfor(i in 1:365){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\n\n\npoints(1:365, rep(j,365), col=adjustcolor(color_ramp[nearest], alpha=.5), pch=15, cex=.6)\n}\n\nabline(h=0, col=\"black\")\n\nabline(v =julian(strptime(\"2016-03-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-09-22\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-12-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-06-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\n#legend(\"topright\", legend=c(\"arrival start\", \"arrival end\", \"lay start\", \"lay end\", \"hatch start\", \"hatch end\", \"fledge start\", \"fledge end\", \"depart start\", \"depart end\"), col=c(adjustcolor(\"red\", alpha=1), adjustcolor(\"red\", alpha=.5), adjustcolor(\"green\", alpha=1), adjustcolor(\"green\", alpha=.5), adjustcolor(\"blue\", alpha=1), adjustcolor(\"blue\", alpha=.5), adjustcolor(\"orange\", alpha=1), adjustcolor(\"orange\", alpha=.5), adjustcolor(\"black\", alpha=1), adjustcolor(\"black\", alpha=.5)), pch=\"-\", cex=1.4)\n\n\n####################\n\ncolor_return <- function(julian_date_column, shape, colors){\nlengths_at_day <- daylength(as.numeric(spring_data[,4]),as.numeric(spring_data[,5]), as.numeric(spring_data[, julian_date_column]), rep(1, length(spring_data[, julian_date_column])))[,3]\nframe_seq <- seq(0,24, length.out=365)\nnearest <- rep(NA, length(lengths_at_day))\nfor(i in 1:length(lengths_at_day)){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\npoints(spring_data[, julian_date_column], as.numeric(spring_data[,4]), pch=shape, cex=1.5, col=adjustcolor( colors[nearest], alpha=1))\n\n}\n\n\n#color_return(32, 15, spring_data[,44])\n#color_return(33, 15, spring_data[,44])\n\n#color_return(34, 17, spring_data[,44])\n#color_return(35, 15, spring_data[,44])\n\n#color_return(36, 25, spring_data[,44])\n#color_return(37, 25, spring_data[,44])\n\n#color_return(38, 11, spring_data[,44])\n#color_return(39, 11, spring_data[,44])\n\n#color_return(40, 23, spring_data[,44])\n#color_return(41, 23, spring_data[,44])\n\nadjuster <- 38\nresiduals <- 40\nup_down <- 5\nlines(declination(jd2016 + adjuster) + up_down)\nlines(declination(jd2016+ adjuster) + residuals + up_down, lty=2)\nlines(declination(jd2016+ adjuster) - residuals + up_down, lty=2)\n\nnames(spring_data)\nhead(spring_data)\n\n\nfamily <- as.factor(spring_data[,3])\nlevels(family) <- rainbow(length(levels(family)))\n\nhead(spring_data[,32:38])\nline_vectors <- spring_data[,c(5,33, 35, 37, 39)]\ndim(line_vectors)\n\n \ncolor_vector <- colorRampPalette(c( \"#756bb1\", \"#bcbddc\", \"#efedf5\"))(4)\n\nh <-300\nfor(h in 1:length(spring_data[, 1])){\nlines(x= line_vectors[h , 2:3], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[1], alpha=.2))\npoints(x= line_vectors[h , 2], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(family[h], alpha=.7))\n\nlines(x= line_vectors[h , 3:4], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[2], alpha=.2))\npoints(x= line_vectors[h , 3], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(family[h], alpha=.7))\n\nlines(x= line_vectors[h , 4:5], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[3], alpha=.2))\npoints(x= line_vectors[h , 4], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(family[h], alpha=.7))\n\npoints(x= line_vectors[h , 5], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(family[h], alpha=.7))\n\n}\n\n\nlegend(\"topright\", legend= levels(as.factor(spring_data[,43])), pch=19, col= levels(family), bg=\"white\")\n\ndev.off()\n\n#############################################\n#############################################\n\n\n\n\n\n\n#############################\n#############################\n\n\npdf(file=\"~/Dropbox/Spring/lat and daylength_by_diet.pdf\", width=15, height=8.5)\n\njd2016 <- JD(seq(ISOdate(2016,1,1),ISOdate(2016,12,31),by= \"day\" )) \n\n\nplot(0,0,xlim=c(0,500), ylim=c(-90,90), xlab=\"Julian date\", ylab=\"Latitude\", main=\"Breeding season by Diet\")\nj <- 10\ni <- 3\nframe_seq <- seq(0,24, length.out=365)\n\n#frame_seq[nearest]\n\ncolor_ramp <- colorRampPalette(c(\"black\", \"cornflowerblue\",\"#FFFF80FF\", \"#FFFF00FF\", \"#FF8000FF\", \"firebrick\"))(365)\n\nfor(j in -90:90){\nlengths_at_day <- daylength(j,11, jd2016,1)[,3]\n\nnearest <- rep(NA, 365)\nfor(i in 1:365){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\n\n\npoints(1:365, rep(j,365), col=adjustcolor(color_ramp[nearest], alpha=.5), pch=15, cex=.6)\n}\n\nabline(h=0, col=\"black\")\n\nabline(v =julian(strptime(\"2016-03-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-09-22\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-12-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\nabline(v =julian(strptime(\"2016-06-21\", format=\"%Y-%m-%d\"), origin= as.POSIXct(\"2016-01-01\")), lty=1, col=\"black\")\n\n#legend(\"topright\", legend=c(\"arrival start\", \"arrival end\", \"lay start\", \"lay end\", \"hatch start\", \"hatch end\", \"fledge start\", \"fledge end\", \"depart start\", \"depart end\"), col=c(adjustcolor(\"red\", alpha=1), adjustcolor(\"red\", alpha=.5), adjustcolor(\"green\", alpha=1), adjustcolor(\"green\", alpha=.5), adjustcolor(\"blue\", alpha=1), adjustcolor(\"blue\", alpha=.5), adjustcolor(\"orange\", alpha=1), adjustcolor(\"orange\", alpha=.5), adjustcolor(\"black\", alpha=1), adjustcolor(\"black\", alpha=.5)), pch=\"-\", cex=1.4)\n\n\n####################\n\ncolor_return <- function(julian_date_column, shape, colors){\nlengths_at_day <- daylength(as.numeric(spring_data[,4]),as.numeric(spring_data[,5]), as.numeric(spring_data[, julian_date_column]), rep(1, length(spring_data[, julian_date_column])))[,3]\nframe_seq <- seq(0,24, length.out=365)\nnearest <- rep(NA, length(lengths_at_day))\nfor(i in 1:length(lengths_at_day)){\n\ttry(nearest[i] <- which(min(abs(frame_seq - lengths_at_day[i])) == abs(frame_seq - lengths_at_day[i])), silent=TRUE)\n}\npoints(spring_data[, julian_date_column], as.numeric(spring_data[,4]), pch=shape, cex=1.5, col=adjustcolor( colors[nearest], alpha=1))\n\n}\n\n\n#color_return(32, 15, spring_data[,44])\n#color_return(33, 15, spring_data[,44])\n\n#color_return(34, 17, spring_data[,44])\n#color_return(35, 15, spring_data[,44])\n\n#color_return(36, 25, spring_data[,44])\n#color_return(37, 25, spring_data[,44])\n\n#color_return(38, 11, spring_data[,44])\n#color_return(39, 11, spring_data[,44])\n\n#color_return(40, 23, spring_data[,44])\n#color_return(41, 23, spring_data[,44])\n\nadjuster <- -10\nresiduals <- 50\nup_down <- 5\nlines(declination(jd2016 + adjuster) + up_down)\nlines(declination(jd2016+ adjuster) + residuals + up_down, lty=2)\nlines(declination(jd2016+ adjuster) - residuals + up_down, lty=2)\n\nnames(spring_data)\nhead(spring_data)\ndiets <- as.factor(spring_data[,29])\nlevels(diets) <- rainbow(length(levels(diets)))\n\n\nhead(spring_data[,32:38])\nline_vectors <- spring_data[,c(4,32, 34, 36, 38)]\ndim(line_vectors)\n\n \ncolor_vector <- colorRampPalette(c( \"#756bb1\", \"#bcbddc\", \"#efedf5\"))(4)\n\nh <-300\nfor(h in 1:length(spring_data[, 1])){\nlines(x= line_vectors[h , 2:3], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[1], alpha=.2))\npoints(x= line_vectors[h , 2], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(diets[h], alpha=.7))\n\nlines(x= line_vectors[h , 3:4], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[2], alpha=.2))\npoints(x= line_vectors[h , 3], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(diets[h], alpha=.7))\n\nlines(x= line_vectors[h , 4:5], y=rep(line_vectors[h , 1], 2), pch=19, lwd=1.5, col= adjustcolor(color_vector[3], alpha=.2))\npoints(x= line_vectors[h , 4], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(diets[h], alpha=.7))\n\npoints(x= line_vectors[h , 5], y=line_vectors[h , 1], pch=19, cex=1.5, col= adjustcolor(diets[h], alpha=.7))\n\n}\n\nlegend(\"topright\", legend= levels(as.factor(spring_data[,29])), pch=19, col= levels(diets), bg=\"white\")\n\ndev.off()\n\n#############################################\n#############################################\n#library(letsR)\n#spring_data[,1]\n#habitats <- lets.iucn.ha(spring_data[, 1], count = TRUE)",
    "created" : 1496848440581.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3838088619",
    "id" : "719BED30",
    "lastKnownWriteTime" : 1492792363,
    "last_content_update" : 1492792363,
    "path" : "C:/Users/Catherine/Dropbox/Spring/sine curve breeding time data combine and figure.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}